;@com.wudsn.ide.asm.hardware=APPLE2 
; ACME 0.90
; CRAZY CYCLES 2
; PART II

; version 0.07

; 0.07 - test 2
; 0.06 - version finale 1
; 0.05 - ajout COLOR
; 0.04 - ajout prise en compte Marker (pour diff�rentes parties)
; 0.03 - test multi-barres + bicolor
; 0.02 - test 4 ligne pour 1 barre
; 0.01 - premi�re version working (1 ligne)

!sl "part2label.a"		; sauvegarde labels (debug)
!source "mainlabel.a"
!source "../../macros.a"

		*= $4000 		; ORG = $4000

; CONSTANTES PROGRAMME =================

; CONSTANTES SYSTEME ===================
;VERTBLANK	 	= $C019	; 
; Page ZERO ============================



bMachine 		= $0A	; byte MACHINE ($7F/IIE | $FF/GS)
bRefresh		= $0B	; refresh rate : type NTSC/60Hz - PAL/50Hz (00 = 50HZ | 01 = 60 HZ)

FUMES = $C050
; SyncCodePTR = $FFFA   ; + $FFFB

MB_BASEADDR	= $10

; DISPLAYSYNC	= $50
; VSYNC		= $51

OUT1			= $20 ; +$21
OUT2			= $22 ; +$23
	
;Mark			= $25
MarkCounter		= $D0
; --------------------------------------
;LIGNE			= $30
;HAUTEUR			= $31
IndexBar1		= $D2
IndexBar2		= $D3
IndexBar3		= $D4
IndexBar4		= $D5
IndexBar5		= $D6
IndexBar6		= $D7
IndexBar7		= $D8
IndexBar8		= $D9
IndexBar9		= $DA
IndexBar10		= $DB
IndexBar11	 	= $DC
IndexBar12		= $DD
Color			= $DE
; =============================================================================

; -----------------------------------------------------------------------------
PARTII
!zone	

	; LDY #$04			; 2
	; LDA (MB_BASEADDR),Y		; 5/ read T1CL (low counter) & reset T1 IRF
	; LDY #$08
	; LDA (MB_BASEADDR),Y		; read T2CL (low counter) & reset T2 IRF
	CLI
	JSR WAIT_VSYNC
	JSR WAIT_VSYNC
; =============================================================================
; INIT
			
			LDA #00   	
			STA LIGNE 	; on d�marre � 01
			STA IndexBar1
			STA Mark
			STA MarkCounter          
			LDA #189 	; on d�marre � 187             
			STA HAUTEUR
			LDA #05
			STA IndexBar2
			LDA #10
			STA IndexBar3
			LDA #15
			STA IndexBar4
			LDA #20
			STA IndexBar5
			LDA #25
			STA IndexBar6
			LDA #30
			STA IndexBar7
			LDA #35
			STA IndexBar8
			LDA #40
			STA IndexBar9
			LDA #45
			STA IndexBar10
			LDA #50
			STA IndexBar11
			LDA #55
			STA IndexBar12           
; =============================================================================
; ** [VBL] **

	JSR WAIT_DISPLAY
	LDY #150
	JSR WAIT
	SEI						

; =============================================================================
; ** [DIPLAY] **

!zone
; recherche synchronisation - derni�re ligne LORES/TXT
		
.LS1	LDA FUMES		; lecture pos $02  ** important
		CMP #$0C		; 
		BNE .LS1
		NOP
		NOP
		NOP
		NOP
		NOP				;
		LDA FUMES		; lecture pos $14 ** important
		CMP #$02			
		BNE .LS1
		NOP
		NOP
		NOP
		NOP
		NOP	
		LDA FUMES		; 4 ;lecture pos $26 ** important
 		CMP	#$0C		; 2
		BNE .LS1    	; 2 = 8

		; d�but synchro 
		; on attend 65 cycles - 08 d�j� effectu�s = 57 pour retrouver le byte en $7D0+$26 (nouvelle ligne sur les 8)

		LDA Temp		; 3

.LS2	; 11 cycles d�j� faits ici sur les 65
		LDX #$0A
.WL1	DEX	
		BNE .WL1		; 51 cycles  

		LDA Temp		; 3
						; = (8 + 3) + 51 + 3 = 65
				
		LDA FUMES		; 4		; lecture des "autres lignes" en $7F6
		CMP #$0C		; 2
		BNE .S2			; 2/3
		JMP .LS2		; 3  
						; = 11 ; on boucle tant qu'on trouve $00 � cette position

.S2		; quand on arrive ici, on est position $26 de la premi�re ligne de VBL
		; on "revient" au d�but de la seconde ligne
		; (4-2) + 2 + 3 = 7 cycles d�j� effectu� en "HBL" de la premi�re ligne de VBL
		; 25-7 = 18

		; >>>>>>>>>>>>
		; WARNING : il faudrait 18 cycles d'attente en th�orie

		LDA Temp		; 3
		LDA Temp		; 3
		INC Temp		; 5
		NOP				; 2 
						; = 13 (empiriquement)
		; <<<<<<<<<<<<

; on arrive d�but seconde ligne de VBL
; --------------------------------------------
; suivant PAL OU NTSC
; 1 ligne VBL (NTSC) ou 1 + 50 ligne VBL (PAL)
		LDA bRefresh	; 3
		BNE .NTSC		; 3 / (2)
		
		NOP
		NOP			; 3 (appel routine WAIT) + 1 (compenser BNE non pris)
		LDY #50
		JSR WAIT 	; 50 * 65 (PAL)

.NTSC	; 65 - 6 cycles = 59
		LDX #11
.BW0	DEX
		BNE .BW0 ; 56
		LDA Temp ; 3 
; --------------------------------------------
; d�but 3�me ligne de VBL
		LDA Temp
		LDY #67 		; 70 - 3 ; [ 2 lignes de VBL d�j� effectu�es + 1 ligne de VBL � ne pas faire ]
		JSR WAIT
; on est maintenant d�but derni�re ligne de VBL
; =============================================================================
TRANS					; transition VBL entre DGR (80col) et HIRES (40 col)
!zone 
; premier octet derni�re ligne de VBL                               
		LDA Temp		; 3 (pour compenser le JMP)
.BP
		INC LIGNE		; 5
		LDA LIGNE		; 3
		CMP #95         ; 2
		BEQ .FIN        ; 2      
		DEC HAUTEUR     ; 5     
		DEC HAUTEUR     ; 5 = 25 cycles (JMP de la boucle inclus)     
 		
 
		LDX #7									                        
.WL0	DEX									
		BNE .WL0 		; 6*5 + 6 = 36
		NOP
		NOP				; + 2 = 40                    
                    
; ** [DISPLAY] **
; === phase 1 ; 

		; 1 ligne (65 cycles) -->
		STA $C057 		; 4		HGR
		STA $C00C		; 4		80 colonnes OFF
		STA $C05F		; 4		SETAN3 ON / DHGR
			
		NOP				; 2                   
		LDX #10									                        
.WL1	DEX									
		BNE .WL1 		; 9*5 + 6 = 51	
		; <---------

		LDY LIGNE ;
		NOP					
		JSR WAIT  
		
; === phase 2
		; 1 ligne -->
		STA $C056		; 4		GR
		STA $C00D		; 4		80 colonnes ON
		STA $C05E		; 4		SETAN3 OFF / DGR
                         
		NOP				; 2
		LDX #10							               
.WL2 	DEX									
		BNE .WL2 		; 9*5 + 6 = 51 							
		; <--
		
        LDY HAUTEUR						
		NOP
		JSR WAIT
		
; === phase 3
		; 1 ligne (65 cycles) -->
		STA $C057 		; 4		HGR
		STA $C00C		; 4		80 colonnes OFF
		STA $C05F		; 4		SETAN3 ON / DHGR
			
		NOP				; 2                   
		LDX #10									                        
.WL3	DEX									
		BNE .WL3 		; 9*5 + 6 = 51	
		; <---------

		LDY LIGNE ;
		NOP					
		JSR WAIT  
; ===                    
; *** [VBL] ***
; --------------------------------------------
; suivant PAL OU NTSC
; 1 ligne VBL (NTSC) ou 1 + 50 ligne VBL (PAL)
		LDA bRefresh	; 3
.test		BNE .NTSC		; 4 / (2)     !!! attention , ici cross page si BNE = 4 cycles 
		
		NOP				; 2 (on compense le BNE non pris = 4 car cross page)
		+build_check_crosspage .test
		LDA Temp		
		LDY #50
		JSR WAIT 	; 50 * 65 (PAL)

.NTSC	; 65 - 7 cycles = 58
		LDX #11
.BW0	DEX
		BNE .BW0  ; 56
		NOP		  ; 2
; --------------------------------------------
; d�but 2�me ligne de VBL
		LDA Temp
		LDY #68 		; 70 - 2 ; [ 1 ligne de VBL d�j� effectu�e + 1 ligne de VBL � ne pas faire]
		JSR WAIT
				
		JMP .BP								
                         
.FIN
; arriv�e ici = 14 cycles derni�re ligne de VBL
;
		LDX #10
.WL4	DEX
		BNE .WL4 ; + 51 = 65 ! = 1 ligne de VBL
; --------------------------------------------
; ** [DISPLAY] **   ; 192*65 = 12480
		
		LDA #$26		; 2
		JSR Fill1GR		; 6 + 1946
		LDA #$26		; 2
		JSR Fill2GR		; 6 + 1946
						; =  3908 = 60*65 + 8

; killing the 100% sync because of issues
; 		LDX #10
; .W0		DEX
; 		BNE .W0			; 51
;  		LDA Temp		; 3
;  		LDA Temp		; 3 
;  						; + 8 = 65
;  						; => 61 lignes de display 
;  		LDA Temp	
;  		LDY #(192-61)
;  		JSR WAIT		; 1 display complet pour 'rien'... 

; ** [VBL] **
; =============================================================================		
; PLAYER YM
		NOP				; 2 on compense le JMP BP (3cycles) - 1 (64 cycles only quand on boucle ici)
	; killing the 100% sync because of issues
	; LDY #$04			; 2
	; LDA (MB_BASEADDR),Y		; 5/ read T1CL (low counter) & reset T1 IRF
	; LDY #$08
	; LDA (MB_BASEADDR),Y		; read T2CL (low counter) & reset T2 IRF

	LDA #<SYNCCODE
    	STA T2SyncCodePTR
	LDA #>SYNCCODE
    	STA T2SyncCodePTR+1

	LDA #<PLAYERYM
    	STA T1RoutPTR
	LDA #>PLAYERYM
    	STA T1RoutPTR+1

	CLI

BP
!zone	
	JSR WAIT_VSYNC
; d�but premi�re ligne de VBL

	LDA $C000
	BPL +
	STA $C010
	CMP #27+$80
	BNE .end
.enddemo	PLA
	PLA
	JMP .end

+		; routine JOY
		ROL $C062		; bouton 2 ?			; 6
		bcc .sj
.end
	LDA #0
    	STA T2SyncCodePTR+1
	STA T1RoutPTR+1
	RTS										; 3
.sj		ROL $C061		; bouton 1 ?			; 6
		bcs .end		; si bouton 1			; 2 = 17

		; INC Temp
		; INC Temp
		; NOP
		; NOP				; 14 + 17 = 31

	;	JSR PLAYERYM	; 6 + 1001 = 1007 = 15*65 [+ 32] 
						; 2 + 31 + 32 + 15*65 => 16 lignes !
	
; => ici 16 "lignes" de VBL effectu�es
; -----------------------------------------------------------------------------

		LDA Mark				; 3
		BEQ .sm1				; 2
		INC MarkCounter			; 5
		LDA MarkCounter			; 5
+		LDA #00					; 2
		STA Mark				; 3
		JMP .sm2				; 3
								; = 18
.sm1	INC Temp
		INC Temp
		NOP						; (=18)					

.sm2	LDY MarkCounter			; 3
	LDA TableRoutinesL,Y	; 4
	STA OFFRoutine+1		; 4
	LDA TableRoutinesH,Y	; 4
	STA OFFRoutine+2		; 4
							; = 19

	LDX #5
.bm0	DEX
		BNE .bm0				; = 26
		NOP 					; 2
								; = 18 + 19 + 28 = 65
OFFRoutine
		JSR Partie0				; 14*65

; -----------------------------------------------------------------------------


; => ici 31 lignes de VBL effectu�es
; -----------------------------------------------------------------------------
; 		; 1 ligne VBL (NTSC) ou 1 + 50 ligne VBL (PAL)
; 		LDA bRefresh	; 3
; 		BNE .NTSC		; 3 / (2)
		
; 		NOP
; 		NOP			; 3 (appel routine WAIT) + 1 (compens� BNE non pris)
; 		LDY #50
; 		JSR WAIT 	; 50 * 65 (PAL)

; .NTSC	; 65 - 6 cycles = 59
; 		LDX #11
; .BW0	DEX
; 		BNE .BW0 ; 56
; 		LDA Temp ; 3
; => ici 32 lignes de VBL effectu�es (ou 32 + 50 si PAL)
; -----------------------------------------------------------------------------
		; ==> equivalent 31 lignes de VBL

		LDA Color		; 3
OFFJSRFILL
		JSR Fill1GR		; 6 + 1946
						; = 1955 = 30*65 + 5
	JMP BP
; 		LDX #11
; .W1		DEX
; 		BNE .W1			; 56
; 		NOP
; 		NOP				; 4 = 60
; 						; + 5 = 1 ligne
; 		; <==== 31 lignes

; 		LDA Temp
; 		LDY #(70-32-31-1) 		; on compl�te le VBL moins 1 ligne !			
; 		JSR WAIT

	; removed the 100% sync-code because of issues

SYNCCODE
	CLI    ;T1 will happen during this rout
	LDA 4000,X
	LDA 4000,X
	LDA 4000,X
	LDA 4000,X
	LDA 4000,X
	LDA 4000,X
	LDA 4000,X
	LDA 4000,X
	LDA 4000,X
	LDA 4000,X
	LDA 4000,X
	LDA 4000,X
	LDA 4000,X
	LDA 4000,X
	LDA $44
	; LDA 4000,X

; ici derni�re ligne de VBL
	
; 		LDX #10
; .BW1	DEX
; 		BNE .BW1 			; = 51 cycles => il manque 14 cycles pour finir la ligne !
; 						;	ce qui permet de commencer le display dans le HBL...
	LDX #0
	LDY #0
		; X et Y = 0
; -----------------------------------------------------------------------------
; ** [DISPLAY] **

.BAff	; <==
		; 65 cycles
		LDA TBUFFER,X		; 4				; lecture mode ligne courante
		BEQ .s1				; 2/3
		STA $C056			; 4
		JMP .s2				; 3
.s1		INC $C057			; 6  
							; = 13

.s2		LDA #00				; 2				; remise au mode par d�faut pour la ligne courante
		STA TBUFFER,X		; 5
		INX 				; 2  
							; = 9 

		LDY #6
.BW2	DEY
		BNE .BW2			; = 31
	
		LDA Temp			; 3
		CPX #192			; 2				; 0-191
		STA $C057			; 4				; mode par d�faut
		BNE .BAff			; 3

							; = 13 + 9 + 31 + 12 = [65]

		; ==> 65 * 191 + 64
		
		; on reporte ici les 14 cycles manquants (pour commencer dans le HBL) :
	;	INC Temp
	;	INC Temp
	;	NOP
	;	NOP					; = 14

	RTS
; =============================================================================
Fill1GR 			; dans A : couleur GR ($00,$FF,etc)
!zone
				
	 sta $400
     sta $401
     sta $402
     sta $403
     sta $404
     sta $405
     sta $406
     sta $407
     sta $408
     sta $409
     sta $40a
     sta $40b
     sta $40c
     sta $40d
     sta $40e
     sta $40f
     sta $410
     sta $411
     sta $412
     sta $413
     sta $414
     sta $415
     sta $416
     sta $417
     sta $418
     sta $419
     sta $41a
     sta $41b
     sta $41c
     sta $41d
     sta $41e
     sta $41f
     sta $420
     sta $421
     sta $422
     sta $423
     sta $424
     sta $425
     sta $426
     sta $427
     sta $480
     sta $481
     sta $482
     sta $483
     sta $484
     sta $485
     sta $486
     sta $487
     sta $488
     sta $489
     sta $48a
     sta $48b
     sta $48c
     sta $48d
     sta $48e
     sta $48f
     sta $490
     sta $491
     sta $492
     sta $493
     sta $494
     sta $495
     sta $496
     sta $497
     sta $498
     sta $499
     sta $49a
     sta $49b
     sta $49c
     sta $49d
     sta $49e
     sta $49f
     sta $4a0
     sta $4a1
     sta $4a2
     sta $4a3
     sta $4a4
     sta $4a5
     sta $4a6
     sta $4a7
     sta $500
     sta $501
     sta $502
     sta $503
     sta $504
     sta $505
     sta $506
     sta $507
     sta $508
     sta $509
     sta $50a
     sta $50b
     sta $50c
     sta $50d
     sta $50e
     sta $50f
     sta $510
     sta $511
     sta $512
     sta $513
     sta $514
     sta $515
     sta $516
     sta $517
     sta $518
     sta $519
     sta $51a
     sta $51b
     sta $51c
     sta $51d
     sta $51e
     sta $51f
     sta $520
     sta $521
     sta $522
     sta $523
     sta $524
     sta $525
     sta $526
     sta $527
     sta $580
     sta $581
     sta $582
     sta $583
     sta $584
     sta $585
     sta $586
     sta $587
     sta $588
     sta $589
     sta $58a
     sta $58b
     sta $58c
     sta $58d
     sta $58e
     sta $58f
     sta $590
     sta $591
     sta $592
     sta $593
     sta $594
     sta $595
     sta $596
     sta $597
     sta $598
     sta $599
     sta $59a
     sta $59b
     sta $59c
     sta $59d
     sta $59e
     sta $59f
     sta $5a0
     sta $5a1
     sta $5a2
     sta $5a3
     sta $5a4
     sta $5a5
     sta $5a6
     sta $5a7
     sta $600
     sta $601
     sta $602
     sta $603
     sta $604
     sta $605
     sta $606
     sta $607
     sta $608
     sta $609
     sta $60a
     sta $60b
     sta $60c
     sta $60d
     sta $60e
     sta $60f
     sta $610
     sta $611
     sta $612
     sta $613
     sta $614
     sta $615
     sta $616
     sta $617
     sta $618
     sta $619
     sta $61a
     sta $61b
     sta $61c
     sta $61d
     sta $61e
     sta $61f
     sta $620
     sta $621
     sta $622
     sta $623
     sta $624
     sta $625
     sta $626
     sta $627
     sta $680
     sta $681
     sta $682
     sta $683
     sta $684
     sta $685
     sta $686
     sta $687
     sta $688
     sta $689
     sta $68a
     sta $68b
     sta $68c
     sta $68d
     sta $68e
     sta $68f
     sta $690
     sta $691
     sta $692
     sta $693
     sta $694
     sta $695
     sta $696
     sta $697
     sta $698
     sta $699
     sta $69a
     sta $69b
     sta $69c
     sta $69d
     sta $69e
     sta $69f
     sta $6a0
     sta $6a1
     sta $6a2
     sta $6a3
     sta $6a4
     sta $6a5
     sta $6a6
     sta $6a7
     sta $700
     sta $701
     sta $702
     sta $703
     sta $704
     sta $705
     sta $706
     sta $707
     sta $708
     sta $709
     sta $70a
     sta $70b
     sta $70c
     sta $70d
     sta $70e
     sta $70f
     sta $710
     sta $711
     sta $712
     sta $713
     sta $714
     sta $715
     sta $716
     sta $717
     sta $718
     sta $719
     sta $71a
     sta $71b
     sta $71c
     sta $71d
     sta $71e
     sta $71f
     sta $720
     sta $721
     sta $722
     sta $723
     sta $724
     sta $725
     sta $726
     sta $727
     sta $780
     sta $781
     sta $782
     sta $783
     sta $784
     sta $785
     sta $786
     sta $787
     sta $788
     sta $789
     sta $78a
     sta $78b
     sta $78c
     sta $78d
     sta $78e
     sta $78f
     sta $790
     sta $791
     sta $792
     sta $793
     sta $794
     sta $795
     sta $796
     sta $797
     sta $798
     sta $799
     sta $79a
     sta $79b
     sta $79c
     sta $79d
     sta $79e
     sta $79f
     sta $7a0
     sta $7a1
     sta $7a2
     sta $7a3
     sta $7a4
     sta $7a5
     sta $7a6
     sta $7a7
     sta $428
     sta $429
     sta $42a
     sta $42b
     sta $42c
     sta $42d
     sta $42e
     sta $42f
     sta $430
     sta $431
     sta $432
     sta $433
     sta $434
     sta $435
     sta $436
     sta $437
     sta $438
     sta $439
     sta $43a
     sta $43b
     sta $43c
     sta $43d
     sta $43e
     sta $43f
     sta $440
     sta $441
     sta $442
     sta $443
     sta $444
     sta $445
     sta $446
     sta $447
     sta $448
     sta $449
     sta $44a
     sta $44b
     sta $44c
     sta $44d
     sta $44e
     sta $44f
     sta $4a8
     sta $4a9
     sta $4aa
     sta $4ab
     sta $4ac
     sta $4ad
     sta $4ae
     sta $4af
     sta $4b0
     sta $4b1
     sta $4b2
     sta $4b3
     sta $4b4
     sta $4b5
     sta $4b6
     sta $4b7
     sta $4b8
     sta $4b9
     sta $4ba
     sta $4bb
     sta $4bc
     sta $4bd
     sta $4be
     sta $4bf
     sta $4c0
     sta $4c1
     sta $4c2
     sta $4c3
     sta $4c4
     sta $4c5
     sta $4c6
     sta $4c7
     sta $4c8
     sta $4c9
     sta $4ca
     sta $4cb
     sta $4cc
     sta $4cd
     sta $4ce
     sta $4cf
     sta $528
     sta $529
     sta $52a
     sta $52b
     sta $52c
     sta $52d
     sta $52e
     sta $52f
     sta $530
     sta $531
     sta $532
     sta $533
     sta $534
     sta $535
     sta $536
     sta $537
     sta $538
     sta $539
     sta $53a
     sta $53b
     sta $53c
     sta $53d
     sta $53e
     sta $53f
     sta $540
     sta $541
     sta $542
     sta $543
     sta $544
     sta $545
     sta $546
     sta $547
     sta $548
     sta $549
     sta $54a
     sta $54b
     sta $54c
     sta $54d
     sta $54e
     sta $54f
     sta $5a8
     sta $5a9
     sta $5aa
     sta $5ab
     sta $5ac
     sta $5ad
     sta $5ae
     sta $5af
     sta $5b0
     sta $5b1
     sta $5b2
     sta $5b3
     sta $5b4
     sta $5b5
     sta $5b6
     sta $5b7
     sta $5b8
     sta $5b9
     sta $5ba
     sta $5bb
     sta $5bc
     sta $5bd
     sta $5be
     sta $5bf
     sta $5c0
     sta $5c1
     sta $5c2
     sta $5c3
     sta $5c4
     sta $5c5
     sta $5c6
     sta $5c7
     sta $5c8
     sta $5c9
     sta $5ca
     sta $5cb
     sta $5cc
     sta $5cd
     sta $5ce
     sta $5cf
     ; ; => 40x12 = 480 * 4 cycles = 1920

	 	LDA OFFJSRFILL+1				; 4
	 	EOR #(<Fill1GR XOR <Fill2GR) 	; 2
		STA OFFJSRFILL+1				; 4

		LDA OFFJSRFILL+2				; 4
	 	EOR #(>Fill1GR XOR >Fill2GR) 	; 2
		STA OFFJSRFILL+2				; 4

     	RTS
     ; = 1920 + 20 + 6 = 1946
; =============================================================================     
Fill2GR ; dans A : couleur GR ($00,$FF,etc) - remplissage partie BASSE de la page GR/TEXT
!zone
				; 40x12 = 480 * 4 cycles = 1920 + 6 = 1926 cycles
     sta $628
     sta $629
     sta $62a
     sta $62b
     sta $62c
     sta $62d
     sta $62e
     sta $62f
     sta $630
     sta $631
     sta $632
     sta $633
     sta $634
     sta $635
     sta $636
     sta $637
     sta $638
     sta $639
     sta $63a
     sta $63b
     sta $63c
     sta $63d
     sta $63e
     sta $63f
     sta $640
     sta $641
     sta $642
     sta $643
     sta $644
     sta $645
     sta $646
     sta $647
     sta $648
     sta $649
     sta $64a
     sta $64b
     sta $64c
     sta $64d
     sta $64e
     sta $64f
     sta $6a8
     sta $6a9
     sta $6aa
     sta $6ab
     sta $6ac
     sta $6ad
     sta $6ae
     sta $6af
     sta $6b0
     sta $6b1
     sta $6b2
     sta $6b3
     sta $6b4
     sta $6b5
     sta $6b6
     sta $6b7
     sta $6b8
     sta $6b9
     sta $6ba
     sta $6bb
     sta $6bc
     sta $6bd
     sta $6be
     sta $6bf
     sta $6c0
     sta $6c1
     sta $6c2
     sta $6c3
     sta $6c4
     sta $6c5
     sta $6c6
     sta $6c7
     sta $6c8
     sta $6c9
     sta $6ca
     sta $6cb
     sta $6cc
     sta $6cd
     sta $6ce
     sta $6cf
     sta $728
     sta $729
     sta $72a
     sta $72b
     sta $72c
     sta $72d
     sta $72e
     sta $72f
     sta $730
     sta $731
     sta $732
     sta $733
     sta $734
     sta $735
     sta $736
     sta $737
     sta $738
     sta $739
     sta $73a
     sta $73b
     sta $73c
     sta $73d
     sta $73e
     sta $73f
     sta $740
     sta $741
     sta $742
     sta $743
     sta $744
     sta $745
     sta $746
     sta $747
     sta $748
     sta $749
     sta $74a
     sta $74b
     sta $74c
     sta $74d
     sta $74e
     sta $74f
     sta $7a8
     sta $7a9
     sta $7aa
     sta $7ab
     sta $7ac
     sta $7ad
     sta $7ae
     sta $7af
     sta $7b0
     sta $7b1
     sta $7b2
     sta $7b3
     sta $7b4
     sta $7b5
     sta $7b6
     sta $7b7
     sta $7b8
     sta $7b9
     sta $7ba
     sta $7bb
     sta $7bc
     sta $7bd
     sta $7be
     sta $7bf
     sta $7c0
     sta $7c1
     sta $7c2
     sta $7c3
     sta $7c4
     sta $7c5
     sta $7c6
     sta $7c7
     sta $7c8
     sta $7c9
     sta $7ca
     sta $7cb
     sta $7cc
     sta $7cd
     sta $7ce
     sta $7cf
     sta $450
     sta $451
     sta $452
     sta $453
     sta $454
     sta $455
     sta $456
     sta $457
     sta $458
     sta $459
     sta $45a
     sta $45b
     sta $45c
     sta $45d
     sta $45e
     sta $45f
     sta $460
     sta $461
     sta $462
     sta $463
     sta $464
     sta $465
     sta $466
     sta $467
     sta $468
     sta $469
     sta $46a
     sta $46b
     sta $46c
     sta $46d
     sta $46e
     sta $46f
     sta $470
     sta $471
     sta $472
     sta $473
     sta $474
     sta $475
     sta $476
     sta $477
     sta $4d0
     sta $4d1
     sta $4d2
     sta $4d3
     sta $4d4
     sta $4d5
     sta $4d6
     sta $4d7
     sta $4d8
     sta $4d9
     sta $4da
     sta $4db
     sta $4dc
     sta $4dd
     sta $4de
     sta $4df
     sta $4e0
     sta $4e1
     sta $4e2
     sta $4e3
     sta $4e4
     sta $4e5
     sta $4e6
     sta $4e7
     sta $4e8
     sta $4e9
     sta $4ea
     sta $4eb
     sta $4ec
     sta $4ed
     sta $4ee
     sta $4ef
     sta $4f0
     sta $4f1
     sta $4f2
     sta $4f3
     sta $4f4
     sta $4f5
     sta $4f6
     sta $4f7
     sta $550
     sta $551
     sta $552
     sta $553
     sta $554
     sta $555
     sta $556
     sta $557
     sta $558
     sta $559
     sta $55a
     sta $55b
     sta $55c
     sta $55d
     sta $55e
     sta $55f
     sta $560
     sta $561
     sta $562
     sta $563
     sta $564
     sta $565
     sta $566
     sta $567
     sta $568
     sta $569
     sta $56a
     sta $56b
     sta $56c
     sta $56d
     sta $56e
     sta $56f
     sta $570
     sta $571
     sta $572
     sta $573
     sta $574
     sta $575
     sta $576
     sta $577
     sta $5d0
     sta $5d1
     sta $5d2
     sta $5d3
     sta $5d4
     sta $5d5
     sta $5d6
     sta $5d7
     sta $5d8
     sta $5d9
     sta $5da
     sta $5db
     sta $5dc
     sta $5dd
     sta $5de
     sta $5df
     sta $5e0
     sta $5e1
     sta $5e2
     sta $5e3
     sta $5e4
     sta $5e5
     sta $5e6
     sta $5e7
     sta $5e8
     sta $5e9
     sta $5ea
     sta $5eb
     sta $5ec
     sta $5ed
     sta $5ee
     sta $5ef
     sta $5f0
     sta $5f1
     sta $5f2
     sta $5f3
     sta $5f4
     sta $5f5
     sta $5f6
     sta $5f7
     sta $650
     sta $651
     sta $652
     sta $653
     sta $654
     sta $655
     sta $656
     sta $657
     sta $658
     sta $659
     sta $65a
     sta $65b
     sta $65c
     sta $65d
     sta $65e
     sta $65f
     sta $660
     sta $661
     sta $662
     sta $663
     sta $664
     sta $665
     sta $666
     sta $667
     sta $668
     sta $669
     sta $66a
     sta $66b
     sta $66c
     sta $66d
     sta $66e
     sta $66f
     sta $670
     sta $671
     sta $672
     sta $673
     sta $674
     sta $675
     sta $676
     sta $677
     sta $6d0
     sta $6d1
     sta $6d2
     sta $6d3
     sta $6d4
     sta $6d5
     sta $6d6
     sta $6d7
     sta $6d8
     sta $6d9
     sta $6da
     sta $6db
     sta $6dc
     sta $6dd
     sta $6de
     sta $6df
     sta $6e0
     sta $6e1
     sta $6e2
     sta $6e3
     sta $6e4
     sta $6e5
     sta $6e6
     sta $6e7
     sta $6e8
     sta $6e9
     sta $6ea
     sta $6eb
     sta $6ec
     sta $6ed
     sta $6ee
     sta $6ef
     sta $6f0
     sta $6f1
     sta $6f2
     sta $6f3
     sta $6f4
     sta $6f5
     sta $6f6
     sta $6f7
     sta $750
     sta $751
     sta $752
     sta $753
     sta $754
     sta $755
     sta $756
     sta $757
     sta $758
     sta $759
     sta $75a
     sta $75b
     sta $75c
     sta $75d
     sta $75e
     sta $75f
     sta $760
     sta $761
     sta $762
     sta $763
     sta $764
     sta $765
     sta $766
     sta $767
     sta $768
     sta $769
     sta $76a
     sta $76b
     sta $76c
     sta $76d
     sta $76e
     sta $76f
     sta $770
     sta $771
     sta $772
     sta $773
     sta $774
     sta $775
     sta $776
     sta $777
     sta $7d0
     sta $7d1
     sta $7d2
     sta $7d3
     sta $7d4
     sta $7d5
     sta $7d6
     sta $7d7
     sta $7d8
     sta $7d9
     sta $7da
     sta $7db
     sta $7dc
     sta $7dd
     sta $7de
     sta $7df
     sta $7e0
     sta $7e1
     sta $7e2
     sta $7e3
     sta $7e4
     sta $7e5
     sta $7e6
     sta $7e7
     sta $7e8
     sta $7e9
     sta $7ea
     sta $7eb
     sta $7ec
     sta $7ed
     sta $7ee
     sta $7ef
     sta $7f0
     sta $7f1
     sta $7f2
     sta $7f3
     sta $7f4
     sta $7f5
     sta $7f6
     sta $7f7
     
     ; => 40x12 = 480 * 4 cycles = 1920

	 	LDA OFFJSRFILL+1				; 4
	 	EOR #(<Fill1GR XOR <Fill2GR) 	; 2
		STA OFFJSRFILL+1				; 4

		LDA OFFJSRFILL+2				; 4
	 	EOR #(>Fill1GR XOR >Fill2GR) 	; 2
		STA OFFJSRFILL+2				; 4

     	RTS
     ; = 1920 + 20 + 6 = 1946
; =============================================================================
Partie0			
!zone
	+print_debug '0'
		; =>
		LDA #$26			; 2
		STA Color    		; 3
		LDA #$01			; 2
		LDX IndexBar1		; 3
		LDY TSINUS0,X		; 4
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y 		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		
		INC IndexBar1		; 5
							; = 73
		; <= 73 cycles

		LDX #8
.bw		DEX
		BNE .bw				; 41
		NOP
		+build_check_crosspage .bw
		NOP					; 4
		
		LDA Temp
		LDY #12
		JSR WAIT			; 12 * 65

		RTS					; 6 + 6 (JSR)
							; 73 + 41 + 4 + 12 = 130 = 2 * 65
							; + 5 * 65
							; = 14 LIGNES !
; =============================================================================
Partie1			;
!zone
	+print_debug '1'
		; =>
		LDA #$4C			; 2
		STA Color    		; 3
		LDA #$01			; 2
		LDX IndexBar1		; 3
		LDY TSINUS0,X		; 4

		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y 		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		
		INC IndexBar1		; 5
							; = 73
		; <= 73 cycles

		; =>
		LDA #$4C			; 2
		STA Color    		; 3
		LDA #$01			; 2
		LDX IndexBar2		; 3
		LDY TSINUS0,X		; 4

		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y 		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		
		INC IndexBar2		; 5
							; = 73
		; <= 73 cycles
							; = 73 * 2 = 146 = 2*65 + 16

		LDX #6
.bw		DEX
		BNE .bw				; 31
		LDA Temp			; 3
		+build_check_crosspage .bw
		LDA Temp			; 3
							
		LDA Temp
		LDY #11
		JSR WAIT			; 11 * 65

		RTS					; 6 + 6 (JSR)
							; 16 + 31 + 3 + 3 + 12 = 65 = 1 ligne
							; 14 LIGNES
; =============================================================================
Partie2
!zone
	+print_debug '2'
		; =>
		LDA #$31			; 2
		STA Color    		; 3
		LDA #$01			; 2
		LDX IndexBar1		; 3
		LDY TSINUS0,X		; 4

		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y 		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		
		INC IndexBar1		; 5
							; = 73

		; =>
		LDA #$31			; 2
		STA Color    		; 3
		LDA #$01			; 2
		LDX IndexBar2		; 3
		LDY TSINUS0,X		; 4

		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y 		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		
		INC IndexBar2		; 5
							; = 73

		; =>
		LDA #$31			; 2
		STA Color    		; 3
		LDA #$01			; 2
		LDX IndexBar3		; 3
		LDY TSINUS0,X		; 4

		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y 		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		
		INC IndexBar3		; 5
							; = 73

		; =>
		LDA #$31			; 2
		STA Color    		; 3
		LDA #$01			; 2
		LDX IndexBar4		; 3
		LDY TSINUS0,X		; 4

		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y 		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		
		INC IndexBar4		; 5
							; = 73

		; =>
		LDA #$31			; 2
		STA Color    		; 3
		LDA #$01			; 2
		LDX IndexBar5		; 3
		LDY TSINUS0,X		; 4

		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y 		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		
		INC IndexBar5		; 5
							; = 73

		; =>
		LDA #$31			; 2
		STA Color    		; 3
		LDA #$01			; 2
		LDX IndexBar6		; 3
		LDY TSINUS0,X		; 4

		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y 		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		
		INC IndexBar6		; 5
							; = 73

							; 6 * 73 = 438 = 6*65 + 48

		LDA Temp
		LDY #7
		JSR WAIT			; 7 * 65


		INC Temp			; 5

		RTS					; 6 + 6 = 12
							; 48 + 5 + 12 = 65
							
							; 14 LIGNES !
; =============================================================================
Partie3
!zone
			; =>
	+print_debug '3'
		LDA #$9D			; 2
		STA Color    		; 3
		LDA #$01			; 2
		LDX IndexBar1		; 3
		LDY TSINUS1,X		; 4

		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y 		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		
		INC IndexBar1		; 5
							; = 73

		; =>
		LDA #$9d			; 2
		STA Color    		; 3
		LDA #$01			; 2
		LDX IndexBar2		; 3
		LDY TSINUS1,X		; 4

		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y 		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		
		INC IndexBar2		; 5
							; = 73

		; =>
		LDA #$9d			; 2
		STA Color    		; 3
		LDA #$01			; 2
		LDX IndexBar3		; 3
		LDY TSINUS1,X		; 4

		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y 		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		
		INC IndexBar3		; 5
							; = 73

		; =>
		LDA #$9d			; 2
		STA Color    		; 3
		LDA #$01			; 2
		LDX IndexBar4		; 3
		LDY TSINUS1,X		; 4

		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y 		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		
		INC IndexBar4		; 5
							; = 73

		; =>
		LDA #$9d			; 2
		STA Color    		; 3
		LDA #$01			; 2
		LDX IndexBar5		; 3
		LDY TSINUS1,X		; 4

		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y 		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		
		INC IndexBar5		; 5
							; = 73

		; =>
		LDA #$9d			; 2
		STA Color    		; 3
		LDA #$01			; 2
		LDX IndexBar6		; 3
		LDY TSINUS2,X		; 4

		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y 		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		
		INC IndexBar6		; 5
							; = 73

		LDA #$9d			; 2
		STA Color    		; 3
		LDA #$01			; 2
		LDX IndexBar7		; 3
		LDY TSINUS1,X		; 4

		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y 		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		
		INC IndexBar7		; 5
							; = 73

		; =>
		LDA #$9d			; 2
		STA Color    		; 3
		LDA #$01			; 2
		LDX IndexBar8		; 3
		LDY TSINUS1,X		; 4

		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y 		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		
		INC IndexBar8		; 5
							; = 73

		; =>
		LDA #$9d			; 2
		STA Color    		; 3
		LDA #$01			; 2
		LDX IndexBar9		; 3
		LDY TSINUS1,X		; 4

		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y 		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		
		INC IndexBar9		; 5
							; = 73

		; =>
		LDA #$9d			; 2
		STA Color    		; 3
		LDA #$01			; 2
		LDX IndexBar10		; 3
		LDY TSINUS1,X		; 4

		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y 		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		
		INC IndexBar10		; 5
							; = 73

		; =>
		LDA #$9d			; 2
		STA Color    		; 3
		LDA #$01			; 2
		LDX IndexBar11		; 3
		LDY TSINUS1,X		; 4

		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y 		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		
		INC IndexBar11		; 5
							; = 73

		; =>
		LDA #$9d			; 2
		STA Color    		; 3
		LDA #$01			; 2
		LDX IndexBar12		; 3
		LDY TSINUS2,X		; 4

		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y 		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		
		INC IndexBar12		; 5
							; = 73

							; 12 * 73 = 876 = 13*65 + 31
; 		LDX #3
; .bw		DEX
; 		BNE .bw				; 16
; 		LDA Temp			; 3
; 		+build_check_crosspage .bw
; 		LDA Temp			; 3

		RTS					; 6 + 6 = 12
							; 12 + 31 + 22 = 65

							; 14 LIGNES !
; =============================================================================
Partie4
!zone
	+print_debug '4'
		; =>
		LDA #$9d			; 2
		STA Color    		; 3
		LDA #$01			; 2
		LDX IndexBar1		; 3
		LDY TSINUS0,X		; 4

		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y 		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		
		INC IndexBar1		; 5
							; = 73

		; =>
		LDA #$9d			; 2
		STA Color    		; 3
		LDA #$01			; 2
		LDX IndexBar2		; 3
		LDY TSINUS0,X		; 4

		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y 		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		
		INC IndexBar2		; 5
							; = 73

		; =>
		LDA #$9d			; 2
		STA Color    		; 3
		LDA #$01			; 2
		LDX IndexBar3		; 3
		LDY TSINUS0,X		; 4

		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y 		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		
		INC IndexBar3		; 5
							; = 73

		; =>
		LDA #$9d			; 2
		STA Color    		; 3
		LDA #$01			; 2
		LDX IndexBar4		; 3
		LDY TSINUS0,X		; 4

		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y 		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		
		INC IndexBar4		; 5
							; = 73

		; =>
		LDA #$9d			; 2
		STA Color    		; 3
		LDA #$01			; 2
		LDX IndexBar5		; 3
		LDY TSINUS0,X		; 4

		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y 		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		
		INC IndexBar5		; 5
							; = 73

		; =>
		LDA #$9d			; 2
		STA Color    		; 3
		LDA #$01			; 2
		LDX IndexBar6		; 3
		LDY TSINUS0,X		; 4

		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y 		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		
		INC IndexBar6		; 5
							; = 73

		LDA #$9d			; 2
		STA Color    		; 3
		LDA #$01			; 2
		LDX IndexBar7		; 3
		LDY TSINUS1,X		; 4

		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y 		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		
		INC IndexBar7		; 5
							; = 73

		; =>
		LDA #$9d			; 2
		STA Color    		; 3
		LDA #$01			; 2
		LDX IndexBar8		; 3
		LDY TSINUS1,X		; 4

		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y 		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		
		INC IndexBar8		; 5
							; = 73

		; =>
		LDA #$9d			; 2
		STA Color    		; 3
		LDA #$01			; 2
		LDX IndexBar9		; 3
		LDY TSINUS1,X		; 4

		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y 		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		
		INC IndexBar9		; 5
							; = 73

							; 9 * 73 = 657 = 10*65 + 7

		LDA Temp
		LDY #3
		JSR WAIT			; 3 * 65

		LDX #9
.bw		DEX
		BNE .bw				; 46
		+build_check_crosspage .bw

		RTS					; 6 + 6 = 12
							; 7 + 46 + 12 = 65 = 1 ligne
							
							; 14 LIGNES !
; =============================================================================
Partie5
!zone
	+print_debug '5'
		; =>
		LDA #$9d			; 2
		STA Color    		; 3
		LDA #$01			; 2
		LDX IndexBar1		; 3
		LDY TSINUS0,X		; 4

		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y 		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		
		INC IndexBar1		; 5
							; = 73

		; =>
		LDA #$9d			; 2
		STA Color    		; 3
		LDA #$01			; 2
		LDX IndexBar2		; 3
		LDY TSINUS0,X		; 4

		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y 		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		
		INC IndexBar2		; 5
							; = 73

		; =>
		LDA #$9d			; 2
		STA Color    		; 3
		LDA #$01			; 2
		LDX IndexBar3		; 3
		LDY TSINUS0,X		; 4

		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y 		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		
		INC IndexBar3		; 5
							; = 73

		; =>
		LDA #$9d			; 2
		STA Color    		; 3
		LDA #$01			; 2
		LDX IndexBar4		; 3
		LDY TSINUS0,X		; 4

		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y 		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		
		INC IndexBar4		; 5
							; = 73

		; =>
		LDA #$9d			; 2
		STA Color    		; 3
		LDA #$01			; 2
		LDX IndexBar5		; 3
		LDY TSINUS0,X		; 4

		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y 		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		
		INC IndexBar5		; 5
							; = 73

		; =>
		LDA #$9d			; 2
		STA Color    		; 3
		LDA #$01			; 2
		LDX IndexBar6		; 3
		LDY TSINUS0,X		; 4

		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y 		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		
		INC IndexBar6		; 5
							; = 73

							; 6 * 73 = 438 = 6*65 + 48

		LDA Temp
		LDY #7
		JSR WAIT			; 7 * 65


		INC Temp			; 5

		RTS					; 6 + 6 = 12
							; 48 + 5 + 12 = 65
							
							; 14 LIGNES !
; =============================================================================
Partie6			;
!zone
	+print_debug '6'
		; =>
		LDA #$9d			; 2
		STA Color    		; 3
		LDA #$01			; 2
		LDX IndexBar1		; 3
		LDY TSINUS0,X		; 4

		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y 		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		
		INC IndexBar1		; 5
							; = 73
		; <= 73 cycles

		; =>
		LDA #$9d			; 2
		STA Color    		; 3
		LDA #$01			; 2
		LDX IndexBar2		; 3
		LDY TSINUS0,X		; 4

		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y 		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		
		INC IndexBar2		; 5
							; = 73

		; =>
		LDA #$9d			; 2
		STA Color    		; 3
		LDA #$01			; 2
		LDX IndexBar3		; 3
		LDY TSINUS0,X		; 4

		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y 		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		INY					; 2
		STA TBUFFER,Y		; 5
		
		INC IndexBar3		; 5
							; = 73
		; <= 73 cycles
							; = 73 * 3 = 219 = 3*65 + 24

		LDX #5
.bw		DEX
		BNE .bw				; 26
		LDA Temp			; 3
		+build_check_crosspage .bw					
		LDA Temp
		LDY #10
		JSR WAIT			; 10 * 65

		RTS					; 6 + 6 (JSR)
							; 24 + 29 + 12 = 65 = 1 ligne
							; 14 LIGNES
; =============================================================================
Fin
!zone
	+print_debug 'F'
		PLA
		PLA					; on "d�pile" le dernier JSR
		LDA #0
		STA T1RoutPTR+1
		STA T2SyncCodePTR+1
		RTS					; retour MAIN
; =============================================================================
Temp0	!byte 00
; =============================================================================
!align 255,0

TBUFFER !fill 192,0

TableRoutinesL !byte <Partie0,<Partie1,<Partie2,<Partie3,<Partie4,<Partie5,<Partie6,<Fin
TableRoutinesH !byte >Partie0,>Partie1,>Partie2,>Partie3,>Partie4,>Partie5,>Partie6,>Fin

!align 255,0

; 0-184

TSINUS0 !by 114,116,119,121,123,125,127,129,131,133,135,137,139,141,143,145
      !by 147,149,150,152,154,155,157,159,160,162,163,164,166,167,168,170
      !by 171,172,173,174,175,176,177,178,179,179,180,181,181,182,182,183
      !by 183,183,184,184,184,184,184,184,184,184,184,183,183,183,182,182
      !by 181,181,180,179,179,178,177,176,175,174,173,172,171,170,169,167
      !by 166,165,163,162,160,159,157,156,154,152,150,149,147,145,143,141
      !by 139,137,135,133,131,129,127,125,123,121,119,117,114,112,110,108
      !by 106,103,101,99,97,94,92,90,88,85,83,81,79,76,74,72
      !by 70,68,65,63,61,59,57,55,53,51,49,47,45,43,41,39
      !by 37,35,34,32,30,29,27,25,24,22,21,20,18,17,16,14
      !by 13,12,11,10,9,8,7,6,5,5,4,3,3,2,2,1
      !by 1,1,0,0,0,0,0,0,0,0,0,1,1,1,2,2
      !by 3,3,4,5,5,6,7,8,9,10,11,12,13,14,15,17
      !by 18,19,21,22,24,25,27,28,30,32,34,35,37,39,41,43
      !by 45,47,49,51,53,55,57,59,61,63,65,67,70,72,74,76
      !by 78,81,83,85,87,90,92,94,96,99,101,103,105,108,110,112
 
 

TSINUS1 !by 181,181,180,179,179,178,177,176,175,174,173,172,171,170,169,167
      !by 166,165,163,162,160,159,157,156,154,152,150,149,147,145,143,141
      !by 139,137,135,133,131,129,127,125,123,121,119,117,114,112,110,108
      !by 106,103,101,99,97,94,92,90,88,85,83,81,79,76,74,72
      !by 70,68,65,63,61,59,57,55,53,51,49,47,45,43,41,39
      !by 37,35,34,32,30,29,27,25,24,22,21,20,18,17,16,14
      !by 13,12,11,10,9,8,7,6,5,5,4,3,3,2,2,1
      !by 1,1,0,0,0,0,0,0,0,0,0,1,1,1,2,2
      !by 3,3,4,5,5,6,7,8,9,10,11,12,13,14,15,17
      !by 18,19,21,22,24,25,27,28,30,32,34,35,37,39,41,43
      !by 45,47,49,51,53,55,57,59,61,63,65,67,70,72,74,76
      !by 78,81,83,85,87,90,92,94,96,99,101,103,105,108,110,112
      !by 114,116,119,121,123,125,127,129,131,133,135,137,139,141,143,145
      !by 147,149,150,152,154,155,157,159,160,162,163,164,166,167,168,170
      !by 171,172,173,174,175,176,177,178,179,179,180,181,181,182,182,183
      !by 183,183,184,184,184,184,184,184,184,184,184,183,183,183,182,182
 
 
 
; align�
TSINUS2 !by 80,79,78,77,76,76,75,74,74,74,73,73,73,73,73,73
      !by 73,73,74,74,75,76,77,78,79,80,81,82,84,85,87,89
      !by 91,93,95,97,99,101,103,106,108,110,113,115,118,121,123,126
      !by 128,131,134,136,139,142,144,147,149,152,154,156,159,161,163,165
      !by 167,169,171,173,174,176,177,178,180,181,182,182,183,183,184,184
      !by 184,184,184,183,183,182,181,180,179,178,176,175,173,171,169,167
      !by 165,163,160,158,155,152,149,146,143,140,136,133,129,126,122,119
      !by 115,111,107,104,100,96,92,88,84,81,77,73,69,66,62,58
      !by 55,51,48,45,41,38,35,32,29,27,24,22,19,17,15,13
      !by 11,9,8,6,5,4,3,2,1,1,0,0,0,0,0,1
      !by 1,2,2,3,4,5,7,8,10,11,13,15,17,19,21,23
      !by 25,27,30,32,35,37,40,42,45,47,50,53,55,58,61,63
      !by 66,68,71,73,76,78,81,83,85,87,89,91,93,95,97,98
      !by 100,101,103,104,105,106,107,108,109,110,110,111,111,111,111,111
      !by 111,111,111,110,110,110,109,108,108,107,106,105,104,103,102,101
      !by 100,98,97,96,95,93,92,91,89,88,87,86,85,83,82,81
 
 
 
 
 
 